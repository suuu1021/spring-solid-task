spring:
  # ===================================================================
  # 1. 데이터소스(DB) 설정
  # H2 데이터베이스에 어떻게 연결할지 스프링에게 알려줍니다.
  # ===================================================================
  datasource:
    # url: jdbc:h2:mem:solidtask -> 'solidtask'라는 이름의 메모리 기반 DB를 사용합니다.
    # 서버를 재시작하면 데이터는 사라집니다.
    url: jdbc:h2:mem:demsolidtask
    username: sa # H2 DB 기본 사용자 이름
    password: # 비밀번호는 없음
    driver-class-name: org.h2.Driver # H2 드라이버 지정

  # ===================================================================
  # 2. H2 데이터베이스 콘솔 설정
  # 개발 중 DB 테이블과 데이터를 눈으로 직접 볼 수 있게 해주는 웹 콘솔 기능입니다.
  # ===================================================================
  h2:
    console:
      enabled: true # H2 콘솔 기능 활성화
      path: /h2-console # 브라우저에서 접속할 경로 http://localhost:8080/h2-console

  # ===================================================================
  # 3. JPA 및 Hibernate 설정
  # JPA가 데이터베이스와 어떻게 상호작용할지 상세 규칙을 정합니다.
  # ===================================================================
  jpa:
    # JPA의 구현체인 Hibernate에 대한 설정
    hibernate:
      # ddl-auto: 애플리케이션 실행 시점에 DB 스키마(테이블 등)를 어떻게 처리할지 결정
      # create-drop: 실행 시점에 엔티티 기준으로 테이블을 생성하고, 종료 시점에 모두 삭제합니다. (개발용으로 편리함)
      ddl-auto: create-drop

    # JPA가 생성하고 실행하는 SQL 쿼리를 개발자가 볼 수 있도록 하는 설정
    properties:
      hibernate:
        default_batch_fetch_size: 10
        format_sql: true # SQL 쿼리를 보기 좋게 줄바꿈하여 포맷팅
    show-sql: true # 실행되는 SQL 쿼리를 콘솔에 출력


jwt:
  secret: 'VGhpc0lzQVNlY3JldEtleUZvckpXVFNhZmUhIT8xMjM0NTY='
  expiration-in-ms: 3600000 # 1시간